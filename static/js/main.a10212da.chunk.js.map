{"version":3,"sources":["const.js","utils/utils.js","apis/htmlacademy.js","model/tasks.js","components/Menu.js","components/Filters.js","components/LoadMoreButton.js","components/Task.js","utils/blank.js","components/EditTask.js","components/Sort.js","components/Board.js","components/Status.js","components/Statistics.js","components/App.js","index.js"],"names":["FILTERS","ALL","OVERDUE","TODAY","FAVORITES","REPEATING","ARCHIVE","SORTS","DEFAULT","DATE_UP","DATE_DOWN","COLORS","MODES","ERRORS","isRepeating","repeatingDays","Object","values","isDeadlined","date","isToday","now","Date","tomorrow","getFullYear","getMonth","getDate","today","sortByDateDown","taskA","taskB","dateA","due_date","dateB","sortByDateUp","getRGBAColors","colors","RGBAColors","Map","map","color","get","toLowerCase","axios","create","baseURL","headers","Authorization","TaskModel","receiveTasksData","a","htmlacademy","then","data","_tasks","error","console","updateTask","task","method","url","id","addTask","deleteTask","this","filter","sortType","filterFunction","item","is_archived","is_favorite","repeating_days","sortFunction","tasks","slice","sort","Menu","Fragment","className","type","name","onClick","props","onAddNewTaskClick","htmlFor","onTasksClick","defaultChecked","onStatisticsClick","Component","Filters","tasksAmount","taskModel","getTasks","length","checked","currentFilter","onFilterClick","disabled","renderFilters","LoadMoreButton","onLoadMoreButtonClick","Task","onArchiveButtonClick","onFavoriteButtonClick","onEditButtonClick","useState","favoriting","setFavoriting","archiving","setArchiving","taskRef","useRef","description","isArchived","isFavorite","dueDate","disabledButtonClass","handleFavoriteButtonClick","evt","preventDefault","catch","current","handleArchiveButtonClick","renderedDetails","moment","format","expired","isExpired","ref","width","height","dangerouslySetInnerHTML","__html","noRepeatingDays","mo","tu","we","th","fr","sa","su","blankTask","EditTask","flatpickr","dateInputRef","React","createRef","handleEscClick","key","onEditCancel","handleDescriptionChange","assign","state","target","value","setState","handleSaveButtonClick","showRepeat","showDate","isSaving","onSaveButtonClick","handleDeleteButtonClick","isDeleting","onDeleteButtonClick","handleDayClick","day","handleShowRepeatClick","handleShowDateClick","handleDateChange","handleColorPick","JSON","parse","stringify","document","body","addEventListener","setFlatpickr","removeEventListener","destroy","defaultDate","enableTime","dateFormat","altInput","altFormat","onChange","renderedDays","entries","active","defaultValue","activeColor","placeholder","renderDate","renderRepeatingDays","renderColors","Sort","onSortClick","renderedSort","sortTypeTitle","split","toUpperCase","join","href","data-sort-type","Board","activeTask","onTaskChange","handleEditButtonClick","onModeChange","mode","handleEditCancel","taskCopy","currentTaskAmount","renderAddTask","renderLoadMoreButton","renderBoard","Status","renderedStatus","Statistics","circleRef","filteredTasks","setFilteredTasks","dateFrom","dateTo","isBetween","useEffect","selector","flatpicker","forEach","set","Array","from","keys","getColorsInfo","colorLabels","colorsAmount","circleCtx","circleChart","Chart","labels","datasets","label","backgroundColor","borderColor","borderWidth","App","handleLoadMoreButtonClick","Math","min","handleSortClick","handleFilterClick","handleTaskChange","oldTask","newTask","handleAddNewTaskClick","showStats","handleStatisticsClick","handleTasksClick","handleModeChange","renderContent","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.a10212da.chunk.js","sourcesContent":["const FILTERS = {\r\n  ALL: 'all',\r\n  OVERDUE: 'overdue',\r\n  TODAY: 'today',\r\n  FAVORITES: 'favorites',\r\n  REPEATING: 'repeating',\r\n  ARCHIVE: 'archive',\r\n};\r\n\r\nconst SORTS = {\r\n  DEFAULT: 'default',\r\n  DATE_UP: 'date-up',\r\n  DATE_DOWN: 'date-down',\r\n};\r\n\r\nconst COLORS = ['pink', 'yellow', 'green', 'black', 'blue'];\r\n\r\nconst MODES = {\r\n  SHOW: 'show',\r\n  EDIT: 'edit',\r\n  ADD: 'add',\r\n};\r\n\r\nconst ERRORS = {\r\n  NETWORK: 'network',\r\n};\r\n\r\nexport { FILTERS, SORTS, COLORS, MODES, ERRORS };\r\n","function isRepeating(repeatingDays) {\r\n  for (const value of Object.values(repeatingDays)) {\r\n    if (value) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction isBetween(date, dateFrom, dateTo) {\r\n  return date > dateFrom && date < dateTo;\r\n}\r\n\r\nfunction isDeadlined(date) {\r\n  return date !== null;\r\n}\r\n\r\nfunction isExpired(date) {\r\n  const now = new Date();\r\n  const dueDate = new Date(date);\r\n\r\n  return dueDate < now;\r\n}\r\n\r\nfunction isToday(date) {\r\n  if (date === null) {\r\n    return false;\r\n  }\r\n\r\n  const now = new Date();\r\n  const tomorrow = new Date(\r\n    now.getFullYear(),\r\n    now.getMonth(),\r\n    now.getDate() + 1\r\n  );\r\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n\r\n  return date < tomorrow && date >= today;\r\n}\r\n\r\nfunction sortByDateDown(taskA, taskB) {\r\n  let dateA = taskA.due_date;\r\n  let dateB = taskB.due_date;\r\n\r\n  if (!dateA && !dateB) {\r\n    return 0;\r\n  }\r\n\r\n  if (dateA === null) {\r\n    return 1;\r\n  }\r\n\r\n  if (dateB === null) {\r\n    return -1;\r\n  }\r\n\r\n  return new Date(dateB) - new Date(dateA);\r\n}\r\n\r\nfunction sortByDateUp(taskA, taskB) {\r\n  let dateA = taskA.due_date;\r\n  let dateB = taskB.due_date;\r\n\r\n  if (!dateA && !dateB) {\r\n    return 0;\r\n  }\r\n\r\n  if (dateA === null) {\r\n    return 1;\r\n  }\r\n\r\n  if (dateB === null) {\r\n    return -1;\r\n  }\r\n\r\n  return new Date(dateA) - new Date(dateB);\r\n}\r\n\r\nfunction getRGBAColors(colors) {\r\n  const RGBAColors = new Map([\r\n    ['blue', 'rgba(0, 0, 255, 0.5)'],\r\n    ['green', 'rgba(0, 255, 0, 0.5)'],\r\n    ['pink', 'rgba(238, 0, 255, 0.5)'],\r\n    ['yellow', 'rgba(255, 255, 0, 0.5)'],\r\n    ['black', 'rgba(0, 0, 0, 0.5)'],\r\n  ]);\r\n\r\n  return colors.map((color) => {\r\n    return RGBAColors.get(color.toLowerCase());\r\n  });\r\n}\r\n\r\nexport {\r\n  isRepeating,\r\n  isDeadlined,\r\n  isToday,\r\n  isBetween,\r\n  isExpired,\r\n  sortByDateDown,\r\n  sortByDateUp,\r\n  getRGBAColors,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst key = 'witod1varo_genius';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://11.ecmascript.pages.academy/task-manager',\r\n  headers: {\r\n    Authorization: `Basic ${key}`,\r\n  },\r\n});\r\n","import { FILTERS, SORTS } from '../const';\r\nimport {\r\n  sortByDateDown,\r\n  sortByDateUp,\r\n  isToday,\r\n  isRepeating,\r\n} from '../utils/utils';\r\nimport htmlacademy from '../apis/htmlacademy';\r\n\r\nclass TaskModel {\r\n  constructor() {\r\n    this._tasks = [];\r\n  }\r\n\r\n  receiveTasksData = async () => {\r\n    return await htmlacademy.get('/tasks').then(\r\n      ({ data }) => {\r\n        this._tasks = data;\r\n      },\r\n      (error) => {\r\n        console.error('Network error happend when app tried to receive tasks.');\r\n        this._tasks = null;\r\n      }\r\n    );\r\n  };\r\n\r\n  getTasks({ filter, sortType } = {}) {\r\n    if (!this._tasks) {\r\n      return null;\r\n    }\r\n\r\n    if (!filter) {\r\n      filter = FILTERS.ALL;\r\n    }\r\n\r\n    let filterFunction = (item) => {\r\n      return false;\r\n    };\r\n\r\n    switch (filter) {\r\n      case FILTERS.ALL:\r\n        filterFunction = (item) => {\r\n          return !item.is_archived;\r\n        };\r\n        break;\r\n      case FILTERS.OVERDUE:\r\n        filterFunction = (item) => {\r\n          return (\r\n            !item.is_archived && item.due_date && item.due_date < new Date()\r\n          );\r\n        };\r\n        break;\r\n      case FILTERS.TODAY:\r\n        filterFunction = (item) => {\r\n          return !item.is_archived && isToday(item.due_date);\r\n        };\r\n        break;\r\n      case FILTERS.FAVORITES:\r\n        filterFunction = (item) => {\r\n          return !item.is_archived && item.is_favorite;\r\n        };\r\n        break;\r\n      case FILTERS.REPEATING:\r\n        filterFunction = (item) => {\r\n          return !item.is_archived && isRepeating(item.repeating_days);\r\n        };\r\n        break;\r\n      case FILTERS.ARCHIVE:\r\n        filterFunction = (item) => {\r\n          return item.is_archived;\r\n        };\r\n        break;\r\n      default:\r\n    }\r\n\r\n    if (!sortType) {\r\n      sortType = SORTS.DEFAULT;\r\n    }\r\n\r\n    let sortFunction = null;\r\n\r\n    switch (sortType) {\r\n      case SORTS.DATE_DOWN:\r\n        sortFunction = sortByDateDown;\r\n        break;\r\n      case SORTS.DATE_UP:\r\n        sortFunction = sortByDateUp;\r\n        break;\r\n      case SORTS.DEFAULT:\r\n        sortFunction = () => {\r\n          return 0;\r\n        };\r\n        break;\r\n      default:\r\n    }\r\n\r\n    const tasks = this._tasks.slice().filter(filterFunction).sort(sortFunction);\r\n    return tasks;\r\n  }\r\n\r\n  updateTask = async (task) => {\r\n    return await htmlacademy({\r\n      method: 'PUT',\r\n      url: `/tasks/${task.id}`,\r\n      data: task,\r\n    });\r\n  };\r\n\r\n  addTask = async (task) => {\r\n    return await htmlacademy({\r\n      method: 'POST',\r\n      url: '/tasks',\r\n      data: task,\r\n    });\r\n  };\r\n\r\n  deleteTask = async (task) => {\r\n    return await htmlacademy({\r\n      method: 'DELETE',\r\n      url: `/tasks/${task.id}`,\r\n    });\r\n  };\r\n}\r\n\r\nexport default TaskModel;\r\n","import React, { Component } from 'react';\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <section className=\"control__btn-wrap\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"control\"\r\n            id=\"control__new-task\"\r\n            className=\"control__input visually-hidden\"\r\n            onClick={this.props.onAddNewTaskClick}\r\n          />\r\n          <label\r\n            htmlFor=\"control__new-task\"\r\n            className=\"control__label control__label--new-task\"\r\n          >\r\n            + ADD NEW TASK\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"control\"\r\n            id=\"control__task\"\r\n            className=\"control__input visually-hidden\"\r\n            onClick={this.props.onTasksClick}\r\n            defaultChecked\r\n          />\r\n          <label htmlFor=\"control__task\" className=\"control__label\">\r\n            TASKS\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"control\"\r\n            id=\"control__statistic\"\r\n            className=\"control__input visually-hidden\"\r\n            onClick={this.props.onStatisticsClick}\r\n          />\r\n          <label htmlFor=\"control__statistic\" className=\"control__label\">\r\n            STATISTICS\r\n          </label>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { FILTERS } from '../const';\r\n\r\nclass Filters extends Component {\r\n  renderFilters() {\r\n    return Object.values(FILTERS).map((filter) => {\r\n      let tasksAmount = null;\r\n      if (this.props.taskModel && this.props.taskModel.getTasks()) {\r\n        tasksAmount = this.props.taskModel.getTasks({ filter }).length;\r\n      } else {\r\n        tasksAmount = 0;\r\n      }\r\n\r\n      const checked = this.props.currentFilter === filter;\r\n\r\n      return (\r\n        <React.Fragment key={`FILTER ${filter}`}>\r\n          <input\r\n            type=\"radio\"\r\n            id={`filter__${filter}`}\r\n            className=\"filter__input visually-hidden\"\r\n            name=\"filter\"\r\n            defaultChecked={checked}\r\n            onClick={() => this.props.onFilterClick(filter)}\r\n            disabled={tasksAmount === 0}\r\n          />\r\n          <label htmlFor={`filter__${filter}`} className=\"filter__label\">\r\n            {filter} <span className=\"filter__all-count\">{tasksAmount}</span>\r\n          </label>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <section className=\"main__filter filter container\">\r\n          {this.renderFilters()}\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\n\r\nfunction LoadMoreButton({ onLoadMoreButtonClick }) {\r\n  return (\r\n    <button className=\"load-more\" type=\"button\" onClick={onLoadMoreButtonClick}>\r\n      load more\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LoadMoreButton;\r\n","import React, { useState, useRef } from 'react';\r\nimport { isRepeating, isDeadlined, isExpired } from '../utils/utils.js';\r\nimport moment from 'moment';\r\n\r\nfunction Task({\r\n  task,\r\n  onArchiveButtonClick,\r\n  onFavoriteButtonClick,\r\n  onEditButtonClick,\r\n}) {\r\n  const [favoriting, setFavoriting] = useState(false);\r\n  const [archiving, setArchiving] = useState(false);\r\n\r\n  const taskRef = useRef();\r\n\r\n  const {\r\n    color,\r\n    description,\r\n    is_archived: isArchived,\r\n    is_favorite: isFavorite,\r\n    repeating_days: repeatingDays,\r\n    due_date: dueDate,\r\n  } = task;\r\n  const disabledButtonClass = 'card__btn--disabled';\r\n\r\n  const handleFavoriteButtonClick = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    setFavoriting(true);\r\n    await onFavoriteButtonClick(task).catch(() => {\r\n      console.error('Network error happened.');\r\n    });\r\n\r\n    if (taskRef.current) {\r\n      setFavoriting(false);\r\n    }\r\n  };\r\n\r\n  const handleArchiveButtonClick = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    setArchiving(true);\r\n    await onArchiveButtonClick(task).catch((error) => {\r\n      console.error('Network error happened.');\r\n    });\r\n\r\n    if (taskRef.current) {\r\n      setArchiving(false);\r\n    }\r\n  };\r\n\r\n  const renderedDetails = isDeadlined(dueDate) ? (\r\n    <div className=\"card__details\">\r\n      <div className=\"card__dates\">\r\n        <div className=\"card__date-deadline\">\r\n          <p className=\"card__input-deadline-wrap\">\r\n            <span className=\"card__date\">\r\n              {moment(dueDate).format('DD MMMM')}\r\n            </span>\r\n            <span className=\"card__time\">\r\n              {moment(dueDate).format('hh:mm A')}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n\r\n  const expired = isDeadlined(dueDate) ? isExpired(dueDate) : false;\r\n\r\n  return (\r\n    <article\r\n      className={`card card--${color} ${\r\n        isRepeating(repeatingDays) ? 'card--repeat' : ''\r\n      } ${expired ? 'card--red card--deadline' : ''}`}\r\n      ref={taskRef}\r\n    >\r\n      <div className=\"card__form\">\r\n        <div className=\"card__inner\">\r\n          <div className=\"card__control\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"card__btn card__btn--edit\"\r\n              onClick={() => onEditButtonClick(task)}\r\n            >\r\n              edit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={`card__btn card__btn--archive ${\r\n                (isArchived && !archiving) || isArchived\r\n                  ? disabledButtonClass\r\n                  : ''\r\n              }`}\r\n              onClick={handleArchiveButtonClick}\r\n            >\r\n              {archiving ? 'archiving..' : 'archive'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={`card__btn card__btn--favorites ${\r\n                (isFavorite && !favoriting) || isFavorite\r\n                  ? disabledButtonClass\r\n                  : ''\r\n              }`}\r\n              onClick={handleFavoriteButtonClick}\r\n            >\r\n              {favoriting ? 'favoriting..' : 'favorites'}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"card__color-bar\">\r\n            <svg\r\n              className=\"card__color-bar-wave\"\r\n              width=\"100%\"\r\n              height=\"10\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: '<use xlink:href=\"#wave\"></use>',\r\n              }}\r\n            ></svg>\r\n          </div>\r\n\r\n          <div className=\"card__textarea-wrap\">\r\n            <p className=\"card__text\">{description}</p>\r\n          </div>\r\n          <div className=\"card__settings\">{renderedDetails}</div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","const noRepeatingDays = {\r\n  mo: false,\r\n  tu: false,\r\n  we: false,\r\n  th: false,\r\n  fr: false,\r\n  sa: false,\r\n  su: false,\r\n};\r\nconst blankTask = {\r\n  color: 'black',\r\n  description: '',\r\n  due_date: null,\r\n  is_archived: false,\r\n  is_favorite: false,\r\n  repeating_days: noRepeatingDays,\r\n};\r\n\r\nfunction makeid(length) {\r\n  var result = '';\r\n  var characters =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport { blankTask, noRepeatingDays, makeid };\r\n","import '../../node_modules/flatpickr/dist/flatpickr.min.css';\r\nimport flatpickr from 'flatpickr';\r\nimport React, { Component } from 'react';\r\nimport { isDeadlined, isRepeating } from '../utils/utils';\r\nimport { noRepeatingDays } from '../utils/blank';\r\nimport { COLORS } from '../const';\r\n\r\nconst MAX_LENGTH = 140;\r\nconst MIN_LENGTH = 1;\r\n\r\nclass EditTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const task = JSON.parse(JSON.stringify(this.props.task));\r\n\r\n    this.state = {\r\n      task,\r\n      showRepeat: isRepeating(task.repeating_days),\r\n      showDate: isDeadlined(task.due_date),\r\n      isDeleting: false,\r\n      isSaving: false,\r\n    };\r\n  }\r\n\r\n  flatpickr = null;\r\n  dateInputRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    document.body.addEventListener('keydown', this.handleEscClick);\r\n    if (this.dateInputRef.current) {\r\n      this.setFlatpickr();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeEventListener('keydown', this.handleEscClick);\r\n    if (this.flatpickr) {\r\n      this.flatpickr.destroy();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.dateInputRef.current) {\r\n      this.setFlatpickr();\r\n    }\r\n  }\r\n\r\n  setFlatpickr() {\r\n    if (this.flatpickr) {\r\n      this.flatpickr.destroy();\r\n    }\r\n\r\n    this.flatpickr = flatpickr(this.dateInputRef.current, {\r\n      defaultDate: this.state.task.due_date || new Date(),\r\n      enableTime: true,\r\n      dateFormat: 'Y-m-d H:i',\r\n      altInput: true,\r\n      altFormat: 'j F H:i',\r\n      onChange: this.handleDateChange,\r\n    });\r\n  }\r\n\r\n  handleEscClick = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n      this.props.onEditCancel();\r\n    }\r\n  };\r\n\r\n  handleDescriptionChange = (evt) => {\r\n    const task = Object.assign({}, this.state.task, {\r\n      description: evt.target.value,\r\n    });\r\n    this.setState({ task });\r\n  };\r\n\r\n  handleSaveButtonClick = (evt) => {\r\n    evt.preventDefault();\r\n    let task = Object.assign({}, this.state.task);\r\n    if (!this.state.showRepeat) {\r\n      const repeatingDays = Object.assign({}, noRepeatingDays);\r\n      task = Object.assign({}, task, { repeating_days: repeatingDays });\r\n    }\r\n\r\n    let dueDate = this.state.showDate\r\n      ? new Date(this.state.task.due_date || new Date())\r\n      : null;\r\n\r\n    task = Object.assign({}, task, { due_date: dueDate });\r\n    this.setState({ isSaving: true });\r\n    this.props.onSaveButtonClick(task);\r\n  };\r\n\r\n  handleDeleteButtonClick = (evt) => {\r\n    evt.preventDefault();\r\n    this.setState({ isDeleting: true });\r\n    this.props.onDeleteButtonClick(this.state.task);\r\n  };\r\n\r\n  handleDayClick = (day) => {\r\n    const repeating_days = Object.assign(\r\n      {},\r\n      this.state.task.repeating_days,\r\n      day\r\n    );\r\n    const task = Object.assign({}, this.state.task, { repeating_days });\r\n    this.setState({ task });\r\n  };\r\n\r\n  handleShowRepeatClick = () => {\r\n    this.setState({ showRepeat: !this.state.showRepeat });\r\n  };\r\n\r\n  handleShowDateClick = () => {\r\n    const showDate = !this.state.showDate;\r\n    let task = this.state.task;\r\n\r\n    if (!showDate) {\r\n      task = Object.assign({}, this.state.task, { due_date: null });\r\n    }\r\n\r\n    this.setState({ showDate, task });\r\n  };\r\n\r\n  handleDateChange = ([date]) => {\r\n    const task = Object.assign({}, this.state.task, {\r\n      due_date: date,\r\n    });\r\n    this.setState({ task });\r\n  };\r\n\r\n  handleColorPick = (color) => {\r\n    const task = Object.assign({}, this.state.task, { color });\r\n    this.setState({ task });\r\n  };\r\n\r\n  renderRepeatingDays(repeatingDays) {\r\n    if (!this.state.showRepeat) {\r\n      return null;\r\n    }\r\n\r\n    const renderedDays = Object.entries(repeatingDays).map(([day, active]) => {\r\n      return (\r\n        <React.Fragment key={`REPEATING_DAY ${day}`}>\r\n          <input\r\n            className=\"visually-hidden card__repeat-day-input\"\r\n            type=\"checkbox\"\r\n            id={`repeat-${day}-4`}\r\n            name=\"repeat\"\r\n            defaultValue={day}\r\n            defaultChecked={active}\r\n            onClick={() =>\r\n              this.handleDayClick({\r\n                [day]: !active,\r\n              })\r\n            }\r\n          />\r\n          <label className=\"card__repeat-day\" htmlFor={`repeat-${day}-4`}>\r\n            {day}\r\n          </label>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <fieldset className=\"card__repeat-days\" key={'RENDERED_DAYS'}>\r\n        <div className=\"card__repeat-days-inner\">{renderedDays}</div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  renderDate(dueDate) {\r\n    if (!this.state.showDate) {\r\n      return null;\r\n    }\r\n\r\n    if (!dueDate) {\r\n      dueDate = new Date();\r\n    }\r\n\r\n    return (\r\n      <fieldset className=\"card__date-deadline\">\r\n        <label className=\"card__input-deadline-wrap\">\r\n          <input\r\n            className=\"card__date\"\r\n            type=\"text\"\r\n            name=\"date\"\r\n            defaultValue={new Date(dueDate)}\r\n            ref={this.dateInputRef}\r\n          />\r\n        </label>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  renderColors(activeColor) {\r\n    return COLORS.map((color) => {\r\n      return (\r\n        <React.Fragment key={`COLOR ${color}`}>\r\n          <input\r\n            type=\"radio\"\r\n            id={`color-${color}-4`}\r\n            className={`card__color-input card__color-input--${color} visually-hidden`}\r\n            name=\"color\"\r\n            defaultValue={color}\r\n            defaultChecked={activeColor === color}\r\n            onClick={() => this.handleColorPick(color)}\r\n          />\r\n          <label\r\n            htmlFor={`color-${color}-4`}\r\n            className={`card__color card__color--${color}`}\r\n          >\r\n            {color}\r\n          </label>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      due_date: dueDate,\r\n      description,\r\n      color,\r\n      repeating_days: repeatingDays,\r\n    } = this.state.task;\r\n    return (\r\n      <article\r\n        className={`card card--edit card--${color} ${\r\n          this.state.showRepeat ? 'card--repeat' : ''\r\n        }`}\r\n      >\r\n        <form className=\"card__form\" method=\"get\">\r\n          <div className=\"card__inner\">\r\n            <div className=\"card__color-bar\">\r\n              <svg\r\n                className=\"card__color-bar-wave\"\r\n                width=\"100%\"\r\n                height=\"10\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: '<use xlink:href=\"#wave\"></use>',\r\n                }}\r\n              ></svg>\r\n            </div>\r\n\r\n            <div className=\"card__textarea-wrap\">\r\n              <label>\r\n                <textarea\r\n                  className=\"card__text\"\r\n                  placeholder=\"Start typing your text here...\"\r\n                  name=\"text\"\r\n                  value={description}\r\n                  onChange={this.handleDescriptionChange}\r\n                ></textarea>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"card__settings\">\r\n              <div className=\"card__details\">\r\n                <div className=\"card__dates\">\r\n                  <button\r\n                    className=\"card__date-deadline-toggle\"\r\n                    type=\"button\"\r\n                    onClick={this.handleShowDateClick}\r\n                  >\r\n                    date:\r\n                    <span className=\"card__date-status\">\r\n                      {this.state.showDate ? 'yes' : 'no'}\r\n                    </span>\r\n                  </button>\r\n\r\n                  {this.renderDate(dueDate)}\r\n\r\n                  <button\r\n                    className=\"card__repeat-toggle\"\r\n                    type=\"button\"\r\n                    onClick={this.handleShowRepeatClick}\r\n                  >\r\n                    repeat:\r\n                    <span className=\"card__repeat-status\">\r\n                      {this.state.showRepeat ? 'yes' : 'no'}\r\n                    </span>\r\n                  </button>\r\n\r\n                  {this.renderRepeatingDays(repeatingDays)}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card__colors-inner\">\r\n                <h3 className=\"card__colors-title\">Color</h3>\r\n                <div className=\"card__colors-wrap\">\r\n                  {this.renderColors(color)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card__status-btns\">\r\n              <button\r\n                className=\"card__save\"\r\n                type=\"submit\"\r\n                onClick={this.handleSaveButtonClick}\r\n                disabled={\r\n                  (this.state.showRepeat && this.state.showDate) ||\r\n                  description.length < MIN_LENGTH ||\r\n                  description.length > MAX_LENGTH ||\r\n                  this.state.isSaving\r\n                }\r\n              >\r\n                {this.state.isSaving ? 'Saving...' : 'Save'}\r\n              </button>\r\n              <button\r\n                className=\"card__delete\"\r\n                type=\"button\"\r\n                onClick={this.handleDeleteButtonClick}\r\n                disabled={this.state.isDeleting}\r\n              >\r\n                {this.state.isDeleting ? 'Deleting...' : 'Delete'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTask;\r\n","import React from 'react';\r\nimport { SORTS } from '../const';\r\n\r\nfunction Sort({ onSortClick }) {\r\n  const renderedSort = Object.values(SORTS).map((sortType) => {\r\n    let sortTypeTitle = sortType.split('-');\r\n    sortTypeTitle[0] = sortTypeTitle[0].toUpperCase();\r\n    sortTypeTitle = sortTypeTitle.join(' ');\r\n\r\n    return (\r\n      <a\r\n        key={`SORT ${sortType}`}\r\n        href=\"#sort\"\r\n        className=\"board__filter\"\r\n        data-sort-type=\"sortType\"\r\n        onClick={() => onSortClick(sortType)}\r\n      >\r\n        SORT BY {sortTypeTitle}\r\n      </a>\r\n    );\r\n  });\r\n\r\n  return <div className=\"board__filter-list\">{renderedSort}</div>;\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\nimport LoadMoreButton from './LoadMoreButton';\r\nimport Task from './Task';\r\nimport EditTask from './EditTask';\r\nimport Sort from './Sort';\r\nimport { MODES } from '../const.js';\r\nimport { blankTask } from '../utils/blank';\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    activeTask: null,\r\n  };\r\n\r\n  handleArchiveButtonClick = async (task) => {\r\n    task = Object.assign({}, task, { is_archived: !task.is_archived });\r\n    return await this.props.onTaskChange(task);\r\n  };\r\n\r\n  handleFavoriteButtonClick = async (task) => {\r\n    task = Object.assign({}, task, { is_favorite: !task.is_favorite });\r\n    return await this.props.onTaskChange(task);\r\n  };\r\n\r\n  handleEditButtonClick = (task) => {\r\n    this.props.onModeChange(MODES.EDIT);\r\n    this.setState({ activeTask: task });\r\n  };\r\n\r\n  handleSaveButtonClick = async (task) => {\r\n    if (this.props.mode === MODES.EDIT) {\r\n      await this.props.onTaskChange(task);\r\n    } else if (this.props.mode === MODES.ADD) {\r\n      await this.props.onTaskChange(null, task);\r\n    }\r\n    this.props.onModeChange(MODES.SHOW);\r\n    this.setState({ activeTask: null });\r\n  };\r\n\r\n  handleDeleteButtonClick = async (task) => {\r\n    if (this.props.mode === MODES.EDIT) {\r\n      await this.props.onTaskChange(task, null);\r\n    }\r\n\r\n    this.props.onModeChange(MODES.SHOW);\r\n    this.setState({ activeTask: null });\r\n  };\r\n\r\n  handleEditCancel = () => {\r\n    this.props.onModeChange(MODES.SHOW);\r\n    this.setState({ activeTask: null });\r\n  };\r\n\r\n  renderBoard() {\r\n    if (\r\n      (this.props.tasks && this.props.tasks.length !== 0) ||\r\n      this.props.mode === MODES.ADD\r\n    ) {\r\n      const tasks = this.props.tasks\r\n        .map((task) => {\r\n          const taskCopy = JSON.parse(JSON.stringify(task));\r\n\r\n          if (\r\n            this.props.mode === MODES.EDIT &&\r\n            this.state.activeTask &&\r\n            taskCopy.id === this.state.activeTask.id\r\n          ) {\r\n            return (\r\n              <EditTask\r\n                key={`EDIT_TASK ${task.id}`}\r\n                task={taskCopy}\r\n                onSaveButtonClick={this.handleSaveButtonClick}\r\n                onDeleteButtonClick={this.handleDeleteButtonClick}\r\n                onEditCancel={this.handleEditCancel}\r\n              />\r\n            );\r\n          }\r\n\r\n          return (\r\n            <Task\r\n              key={`TASK ${task.id}`}\r\n              task={taskCopy}\r\n              onArchiveButtonClick={this.handleArchiveButtonClick}\r\n              onFavoriteButtonClick={this.handleFavoriteButtonClick}\r\n              onEditButtonClick={this.handleEditButtonClick}\r\n            />\r\n          );\r\n        })\r\n        .slice(0, this.props.currentTaskAmount);\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <Sort onSortClick={this.props.onSortClick} />\r\n\r\n          <div className=\"board__tasks\">\r\n            {this.renderAddTask()}\r\n            {tasks}\r\n          </div>\r\n          {this.renderLoadMoreButton()}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    if (this.props.tasks && this.props.tasks.length === 0) {\r\n      return (\r\n        <p className=\"board__no-tasks\">\r\n          Click «ADD NEW TASK» in menu to create your first task\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderAddTask() {\r\n    if (this.props.mode === MODES.ADD) {\r\n      const taskCopy = JSON.parse(JSON.stringify(blankTask));\r\n\r\n      return (\r\n        <EditTask\r\n          key={`ADD_TASK`}\r\n          task={taskCopy}\r\n          onSaveButtonClick={this.handleSaveButtonClick}\r\n          onDeleteButtonClick={this.handleDeleteButtonClick}\r\n          onEditCancel={this.handleEditCancel}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderLoadMoreButton() {\r\n    if (this.props.currentTaskAmount === this.props.tasks.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <LoadMoreButton\r\n        onLoadMoreButtonClick={this.props.onLoadMoreButtonClick}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <section className=\"board container\">{this.renderBoard()}</section>;\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport { ERRORS } from '../const';\r\n\r\nfunction Status({ error }) {\r\n  let renderedStatus = null;\r\n  switch (error) {\r\n    case ERRORS.NETWORK:\r\n      renderedStatus = 'Your network connection is lost. Try again later.';\r\n      break;\r\n    default:\r\n      renderedStatus = 'Loading...';\r\n      break;\r\n  }\r\n\r\n  return <p className=\"board__no-tasks\">{renderedStatus}</p>;\r\n}\r\n\r\nexport default Status;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Chart from 'chart.js';\r\nimport flatpickr from 'flatpickr';\r\nimport { isBetween, getRGBAColors } from '../utils/utils';\r\n\r\nfunction Statistics({ tasks }) {\r\n  const circleRef = useRef();\r\n  const [filteredTasks, setFilteredTasks] = useState(tasks);\r\n\r\n  const handleDateChange = ([dateFrom, dateTo]) => {\r\n    setFilteredTasks(\r\n      tasks.filter((task) => {\r\n        return isBetween(new Date(task.due_date), dateFrom, dateTo);\r\n      })\r\n    );\r\n  };\r\n\r\n  const getColorsInfo = (tasks) => {\r\n    const colors = new Map();\r\n\r\n    tasks.forEach((task) => {\r\n      let color = task.color;\r\n      color = color[0].toUpperCase() + color.slice(1);\r\n      colors.set(color, colors.get(color) + 1 || 1);\r\n    });\r\n\r\n    return [Array.from(colors.keys()), Array.from(colors.values())];\r\n  };\r\n\r\n  const setFlatpickr = (selector) => {\r\n    return flatpickr(selector, {\r\n      mode: 'range',\r\n      altInput: true,\r\n      altFormat: 'F j',\r\n      onChange: handleDateChange,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const flatpicker = setFlatpickr('.statistic__period-input');\r\n\r\n    return () => {\r\n      flatpicker.destroy();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const [colorLabels, colorsAmount] = getColorsInfo(filteredTasks);\r\n\r\n    const circleCtx = circleRef.current;\r\n    const circleChart = new Chart(circleCtx, {\r\n      type: 'doughnut',\r\n      data: {\r\n        labels: colorLabels,\r\n        datasets: [\r\n          {\r\n            label: '# of tasks',\r\n            data: colorsAmount,\r\n            backgroundColor: getRGBAColors(colorLabels),\r\n            borderColor: colorLabels,\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      circleChart.destroy();\r\n    };\r\n  }, [filteredTasks]);\r\n\r\n  return (\r\n    <section className=\"statistic container\">\r\n      <div className=\"statistic__line\">\r\n        <div className=\"statistic__period\">\r\n          <h2 className=\"statistic__period-title\">Task Activity DIAGRAM</h2>\r\n\r\n          <div className=\"statistic-input-wrap\">\r\n            <input\r\n              className=\"statistic__period-input\"\r\n              type=\"text\"\r\n              placeholder=\"01 Feb - 08 Feb\"\r\n            />\r\n          </div>\r\n\r\n          <p className=\"statistic__period-result\">\r\n            In total for the specified period {filteredTasks.length} tasks were\r\n            fulfilled.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"statistic__circle\">\r\n        <div className=\"statistic__colors-wrap\">\r\n          <canvas\r\n            className=\"statistic__colors\"\r\n            width=\"400\"\r\n            height=\"300\"\r\n            ref={circleRef}\r\n          ></canvas>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport TaskModel from '../model/tasks';\nimport { FILTERS, SORTS, MODES, ERRORS } from '../const';\nimport Menu from './Menu';\nimport Filters from './Filters';\nimport Board from './Board';\nimport Status from './Status';\nimport Statistics from './Statistics';\n\nconst DEFAULT_TASKS_AMOUNT = 8;\nconst LOAD_TASKS_AMOUNT = 8;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filter: FILTERS.ALL,\n      sortType: SORTS.DEFAULT,\n      mode: MODES.SHOW,\n      currentTaskAmount: null,\n      error: null,\n      showStats: false,\n    };\n  }\n\n  componentDidMount() {\n    this.taskModel = new TaskModel();\n\n    this.taskModel.receiveTasksData().then(() => {\n      const tasks = this.taskModel.getTasks();\n      if (!tasks) {\n        this.setState({ error: ERRORS.NETWORK });\n        return;\n      }\n\n      const currentTaskAmount = Math.min(\n        this.taskModel.getTasks().length,\n        DEFAULT_TASKS_AMOUNT\n      );\n\n      this.setState({ currentTaskAmount });\n    });\n  }\n\n  handleLoadMoreButtonClick = (evt) => {\n    evt.preventDefault();\n    const tasksAmount = this.taskModel.getTasks({ filter: this.state.filter })\n      .length;\n    const currentTaskAmount = Math.min(\n      tasksAmount,\n      this.state.currentTaskAmount + LOAD_TASKS_AMOUNT\n    );\n\n    this.setState({ currentTaskAmount });\n  };\n\n  handleSortClick = (sort) => {\n    switch (sort) {\n      case SORTS.DEFAULT:\n        this.setState({ sortType: SORTS.DEFAULT });\n        break;\n      case SORTS.DATE_UP:\n        this.setState({ sortType: SORTS.DATE_UP });\n        break;\n      case SORTS.DATE_DOWN:\n        this.setState({ sortType: SORTS.DATE_DOWN });\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleFilterClick = (filter) => {\n    const tasksAmount = this.taskModel.getTasks({ filter }).length;\n    const currentTaskAmount = Math.min(tasksAmount, DEFAULT_TASKS_AMOUNT);\n    this.setState({ filter, currentTaskAmount });\n  };\n\n  handleTaskChange = async (oldTask, newTask) => {\n    if (newTask === null) {\n      await this.taskModel.deleteTask(oldTask);\n    } else if (oldTask === null) {\n      await this.taskModel.addTask(newTask);\n    } else {\n      await this.taskModel.updateTask(oldTask);\n    }\n\n    await this.taskModel.receiveTasksData();\n    const tasksAmount = this.taskModel.getTasks({ filter: this.state.filter })\n      .length;\n    const currentTaskAmount =\n      tasksAmount <= 8 ? tasksAmount : this.state.currentTaskAmount;\n\n    this.setState({ currentTaskAmount });\n  };\n\n  handleAddNewTaskClick = (evt) => {\n    evt.preventDefault();\n\n    if (this.state.error || this.state.showStats) {\n      return;\n    }\n\n    const filter = FILTERS.ALL;\n\n    const tasksAmount = this.taskModel.getTasks({ filter }).length;\n    const currentTaskAmount = Math.min(tasksAmount, DEFAULT_TASKS_AMOUNT);\n\n    this.setState({\n      mode: MODES.ADD,\n      filter,\n      sortType: SORTS.DEFAULT,\n      currentTaskAmount,\n    });\n  };\n\n  handleStatisticsClick = (evt) => {\n    this.setState({ showStats: true });\n  };\n\n  handleTasksClick = (evt) => {\n    this.setState({ showStats: false });\n  };\n\n  handleModeChange = (mode) => {\n    this.setState({ mode });\n  };\n\n  renderContent() {\n    if (this.state.showStats && this.taskModel && this.taskModel.getTasks()) {\n      return <Statistics tasks={this.taskModel.getTasks()} />;\n    }\n\n    if (this.taskModel && this.taskModel.getTasks()) {\n      const filteredTasks = this.taskModel.getTasks({\n        filter: this.state.filter,\n        sortType: this.state.sortType,\n      });\n\n      return (\n        <Board\n          tasks={filteredTasks}\n          mode={this.state.mode}\n          currentTaskAmount={this.state.currentTaskAmount}\n          onLoadMoreButtonClick={this.handleLoadMoreButtonClick}\n          onSortClick={this.handleSortClick}\n          onTaskChange={this.handleTaskChange}\n          onModeChange={this.handleModeChange}\n        />\n      );\n    }\n\n    return <Status error={this.state.error} />;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"main__control control container\">\n          <h1 className=\"control__title\">TASKMANAGER</h1>\n          <Menu\n            onAddNewTaskClick={this.handleAddNewTaskClick}\n            onTasksClick={this.handleTasksClick}\n            onStatisticsClick={this.handleStatisticsClick}\n          />\n        </section>\n        <Filters\n          taskModel={this.taskModel}\n          currentFilter={this.state.filter}\n          onFilterClick={this.handleFilterClick}\n        />\n\n        {this.renderContent()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('.main'));\r\n"],"sourceRoot":""}